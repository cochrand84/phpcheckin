<?php
/**
 * ExistingSale
 *
 * PHP version 5
 *
 * @category Class
 * @package  OpenAPI\Client
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */

/**
 * PHP Point Of Sale API
 *
 * PHP Point Of Sale API  You can find out more about PHP POS at [https://phppointofsale.com](https://phppointofsale.com)
 *
 * The version of the OpenAPI document: 1.0
 * Contact: support@phppointofsale.com
 * Generated by: https://openapi-generator.tech
 * OpenAPI Generator version: 4.1.2
 */

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

namespace OpenAPI\Client\Model;

use \ArrayAccess;
use \OpenAPI\Client\ObjectSerializer;

/**
 * ExistingSale Class Doc Comment
 *
 * @category Class
 * @package  OpenAPI\Client
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */
class ExistingSale implements ModelInterface, ArrayAccess
{
    const DISCRIMINATOR = null;

    /**
      * The original name of the model.
      *
      * @var string
      */
    protected static $openAPIModelName = 'ExistingSale';

    /**
      * Array of property to type mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $openAPITypes = [
        'sale_id' => 'int',
        'store_account_payment' => 'bool',
        'sale_time' => '\DateTime',
        'subtotal' => 'float',
        'tax' => 'float',
        'total' => 'float',
        'profit' => 'float',
        'tip' => 'float',
        'deleted' => 'bool',
        'customer_first_name' => 'string',
        'customer_last_name' => 'string',
        'customer_email' => 'string',
        'customer_phone_number' => 'string',
        'customer_address_1' => 'string',
        'customer_address_2' => 'string',
        'customer_city' => 'string',
        'customer_state' => 'string',
        'customer_zip' => 'string',
        'customer_country' => 'string',
        'customer_comments' => 'string',
        'customer_internal_notes' => 'string',
        'customer_company_name' => 'string',
        'customer_tier_id' => 'int',
        'customer_account_number' => 'string',
        'customer_taxable' => 'bool',
        'customer_tax_certificate' => 'string',
        'customer_override_default_tax' => 'bool',
        'customer_tax_class_id' => 'int',
        'customer_balance' => 'float',
        'customer_credit_limit' => 'float',
        'customer_disable_loyalty' => 'bool',
        'customer_points' => 'int',
        'customer_image_url' => 'string',
        'customer_created_at' => '\DateTime',
        'customer_location_id' => 'int'
    ];

    /**
      * Array of property to format mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $openAPIFormats = [
        'sale_id' => 'uuid',
        'store_account_payment' => null,
        'sale_time' => 'date-time',
        'subtotal' => 'float',
        'tax' => 'float',
        'total' => 'number',
        'profit' => 'number',
        'tip' => 'number',
        'deleted' => null,
        'customer_first_name' => null,
        'customer_last_name' => null,
        'customer_email' => null,
        'customer_phone_number' => null,
        'customer_address_1' => null,
        'customer_address_2' => null,
        'customer_city' => null,
        'customer_state' => null,
        'customer_zip' => null,
        'customer_country' => null,
        'customer_comments' => null,
        'customer_internal_notes' => null,
        'customer_company_name' => null,
        'customer_tier_id' => null,
        'customer_account_number' => null,
        'customer_taxable' => null,
        'customer_tax_certificate' => null,
        'customer_override_default_tax' => null,
        'customer_tax_class_id' => null,
        'customer_balance' => 'float',
        'customer_credit_limit' => 'float',
        'customer_disable_loyalty' => null,
        'customer_points' => null,
        'customer_image_url' => null,
        'customer_created_at' => 'date-time',
        'customer_location_id' => null
    ];

    /**
     * Array of property to type mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function openAPITypes()
    {
        return self::$openAPITypes;
    }

    /**
     * Array of property to format mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function openAPIFormats()
    {
        return self::$openAPIFormats;
    }

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @var string[]
     */
    protected static $attributeMap = [
        'sale_id' => 'sale_id',
        'store_account_payment' => 'store_account_payment',
        'sale_time' => 'sale_time',
        'subtotal' => 'subtotal',
        'tax' => 'tax',
        'total' => 'total',
        'profit' => 'profit',
        'tip' => 'tip',
        'deleted' => 'deleted',
        'customer_first_name' => 'customer_first_name',
        'customer_last_name' => 'customer_last_name',
        'customer_email' => 'customer_email',
        'customer_phone_number' => 'customer_phone_number',
        'customer_address_1' => 'customer_address_1',
        'customer_address_2' => 'customer_address_2',
        'customer_city' => 'customer_city',
        'customer_state' => 'customer_state',
        'customer_zip' => 'customer_zip',
        'customer_country' => 'customer_country',
        'customer_comments' => 'customer_comments',
        'customer_internal_notes' => 'customer_internal_notes',
        'customer_company_name' => 'customer_company_name',
        'customer_tier_id' => 'customer_tier_id',
        'customer_account_number' => 'customer_account_number',
        'customer_taxable' => 'customer_taxable',
        'customer_tax_certificate' => 'customer_tax_certificate',
        'customer_override_default_tax' => 'customer_override_default_tax',
        'customer_tax_class_id' => 'customer_tax_class_id',
        'customer_balance' => 'customer_balance',
        'customer_credit_limit' => 'customer_credit_limit',
        'customer_disable_loyalty' => 'customer_disable_loyalty',
        'customer_points' => 'customer_points',
        'customer_image_url' => 'customer_image_url',
        'customer_created_at' => 'customer_created_at',
        'customer_location_id' => 'customer_location_id'
    ];

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @var string[]
     */
    protected static $setters = [
        'sale_id' => 'setSaleId',
        'store_account_payment' => 'setStoreAccountPayment',
        'sale_time' => 'setSaleTime',
        'subtotal' => 'setSubtotal',
        'tax' => 'setTax',
        'total' => 'setTotal',
        'profit' => 'setProfit',
        'tip' => 'setTip',
        'deleted' => 'setDeleted',
        'customer_first_name' => 'setCustomerFirstName',
        'customer_last_name' => 'setCustomerLastName',
        'customer_email' => 'setCustomerEmail',
        'customer_phone_number' => 'setCustomerPhoneNumber',
        'customer_address_1' => 'setCustomerAddress1',
        'customer_address_2' => 'setCustomerAddress2',
        'customer_city' => 'setCustomerCity',
        'customer_state' => 'setCustomerState',
        'customer_zip' => 'setCustomerZip',
        'customer_country' => 'setCustomerCountry',
        'customer_comments' => 'setCustomerComments',
        'customer_internal_notes' => 'setCustomerInternalNotes',
        'customer_company_name' => 'setCustomerCompanyName',
        'customer_tier_id' => 'setCustomerTierId',
        'customer_account_number' => 'setCustomerAccountNumber',
        'customer_taxable' => 'setCustomerTaxable',
        'customer_tax_certificate' => 'setCustomerTaxCertificate',
        'customer_override_default_tax' => 'setCustomerOverrideDefaultTax',
        'customer_tax_class_id' => 'setCustomerTaxClassId',
        'customer_balance' => 'setCustomerBalance',
        'customer_credit_limit' => 'setCustomerCreditLimit',
        'customer_disable_loyalty' => 'setCustomerDisableLoyalty',
        'customer_points' => 'setCustomerPoints',
        'customer_image_url' => 'setCustomerImageUrl',
        'customer_created_at' => 'setCustomerCreatedAt',
        'customer_location_id' => 'setCustomerLocationId'
    ];

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @var string[]
     */
    protected static $getters = [
        'sale_id' => 'getSaleId',
        'store_account_payment' => 'getStoreAccountPayment',
        'sale_time' => 'getSaleTime',
        'subtotal' => 'getSubtotal',
        'tax' => 'getTax',
        'total' => 'getTotal',
        'profit' => 'getProfit',
        'tip' => 'getTip',
        'deleted' => 'getDeleted',
        'customer_first_name' => 'getCustomerFirstName',
        'customer_last_name' => 'getCustomerLastName',
        'customer_email' => 'getCustomerEmail',
        'customer_phone_number' => 'getCustomerPhoneNumber',
        'customer_address_1' => 'getCustomerAddress1',
        'customer_address_2' => 'getCustomerAddress2',
        'customer_city' => 'getCustomerCity',
        'customer_state' => 'getCustomerState',
        'customer_zip' => 'getCustomerZip',
        'customer_country' => 'getCustomerCountry',
        'customer_comments' => 'getCustomerComments',
        'customer_internal_notes' => 'getCustomerInternalNotes',
        'customer_company_name' => 'getCustomerCompanyName',
        'customer_tier_id' => 'getCustomerTierId',
        'customer_account_number' => 'getCustomerAccountNumber',
        'customer_taxable' => 'getCustomerTaxable',
        'customer_tax_certificate' => 'getCustomerTaxCertificate',
        'customer_override_default_tax' => 'getCustomerOverrideDefaultTax',
        'customer_tax_class_id' => 'getCustomerTaxClassId',
        'customer_balance' => 'getCustomerBalance',
        'customer_credit_limit' => 'getCustomerCreditLimit',
        'customer_disable_loyalty' => 'getCustomerDisableLoyalty',
        'customer_points' => 'getCustomerPoints',
        'customer_image_url' => 'getCustomerImageUrl',
        'customer_created_at' => 'getCustomerCreatedAt',
        'customer_location_id' => 'getCustomerLocationId'
    ];

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @return array
     */
    public static function attributeMap()
    {
        return self::$attributeMap;
    }

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @return array
     */
    public static function setters()
    {
        return self::$setters;
    }

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @return array
     */
    public static function getters()
    {
        return self::$getters;
    }

    /**
     * The original name of the model.
     *
     * @return string
     */
    public function getModelName()
    {
        return self::$openAPIModelName;
    }

    

    

    /**
     * Associative array for storing property values
     *
     * @var mixed[]
     */
    protected $container = [];

    /**
     * Constructor
     *
     * @param mixed[] $data Associated array of property values
     *                      initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->container['sale_id'] = isset($data['sale_id']) ? $data['sale_id'] : null;
        $this->container['store_account_payment'] = isset($data['store_account_payment']) ? $data['store_account_payment'] : null;
        $this->container['sale_time'] = isset($data['sale_time']) ? $data['sale_time'] : null;
        $this->container['subtotal'] = isset($data['subtotal']) ? $data['subtotal'] : null;
        $this->container['tax'] = isset($data['tax']) ? $data['tax'] : null;
        $this->container['total'] = isset($data['total']) ? $data['total'] : null;
        $this->container['profit'] = isset($data['profit']) ? $data['profit'] : null;
        $this->container['tip'] = isset($data['tip']) ? $data['tip'] : null;
        $this->container['deleted'] = isset($data['deleted']) ? $data['deleted'] : null;
        $this->container['customer_first_name'] = isset($data['customer_first_name']) ? $data['customer_first_name'] : null;
        $this->container['customer_last_name'] = isset($data['customer_last_name']) ? $data['customer_last_name'] : null;
        $this->container['customer_email'] = isset($data['customer_email']) ? $data['customer_email'] : null;
        $this->container['customer_phone_number'] = isset($data['customer_phone_number']) ? $data['customer_phone_number'] : null;
        $this->container['customer_address_1'] = isset($data['customer_address_1']) ? $data['customer_address_1'] : null;
        $this->container['customer_address_2'] = isset($data['customer_address_2']) ? $data['customer_address_2'] : null;
        $this->container['customer_city'] = isset($data['customer_city']) ? $data['customer_city'] : null;
        $this->container['customer_state'] = isset($data['customer_state']) ? $data['customer_state'] : null;
        $this->container['customer_zip'] = isset($data['customer_zip']) ? $data['customer_zip'] : null;
        $this->container['customer_country'] = isset($data['customer_country']) ? $data['customer_country'] : null;
        $this->container['customer_comments'] = isset($data['customer_comments']) ? $data['customer_comments'] : null;
        $this->container['customer_internal_notes'] = isset($data['customer_internal_notes']) ? $data['customer_internal_notes'] : null;
        $this->container['customer_company_name'] = isset($data['customer_company_name']) ? $data['customer_company_name'] : null;
        $this->container['customer_tier_id'] = isset($data['customer_tier_id']) ? $data['customer_tier_id'] : null;
        $this->container['customer_account_number'] = isset($data['customer_account_number']) ? $data['customer_account_number'] : null;
        $this->container['customer_taxable'] = isset($data['customer_taxable']) ? $data['customer_taxable'] : null;
        $this->container['customer_tax_certificate'] = isset($data['customer_tax_certificate']) ? $data['customer_tax_certificate'] : null;
        $this->container['customer_override_default_tax'] = isset($data['customer_override_default_tax']) ? $data['customer_override_default_tax'] : null;
        $this->container['customer_tax_class_id'] = isset($data['customer_tax_class_id']) ? $data['customer_tax_class_id'] : null;
        $this->container['customer_balance'] = isset($data['customer_balance']) ? $data['customer_balance'] : null;
        $this->container['customer_credit_limit'] = isset($data['customer_credit_limit']) ? $data['customer_credit_limit'] : null;
        $this->container['customer_disable_loyalty'] = isset($data['customer_disable_loyalty']) ? $data['customer_disable_loyalty'] : null;
        $this->container['customer_points'] = isset($data['customer_points']) ? $data['customer_points'] : null;
        $this->container['customer_image_url'] = isset($data['customer_image_url']) ? $data['customer_image_url'] : null;
        $this->container['customer_created_at'] = isset($data['customer_created_at']) ? $data['customer_created_at'] : null;
        $this->container['customer_location_id'] = isset($data['customer_location_id']) ? $data['customer_location_id'] : null;
    }

    /**
     * Show all the invalid properties with reasons.
     *
     * @return array invalid properties with reasons
     */
    public function listInvalidProperties()
    {
        $invalidProperties = [];

        return $invalidProperties;
    }

    /**
     * Validate all the properties in the model
     * return true if all passed
     *
     * @return bool True if all properties are valid
     */
    public function valid()
    {
        return count($this->listInvalidProperties()) === 0;
    }


    /**
     * Gets sale_id
     *
     * @return int|null
     */
    public function getSaleId()
    {
        return $this->container['sale_id'];
    }

    /**
     * Sets sale_id
     *
     * @param int|null $sale_id sale_id
     *
     * @return $this
     */
    public function setSaleId($sale_id)
    {
        $this->container['sale_id'] = $sale_id;

        return $this;
    }

    /**
     * Gets store_account_payment
     *
     * @return bool|null
     */
    public function getStoreAccountPayment()
    {
        return $this->container['store_account_payment'];
    }

    /**
     * Sets store_account_payment
     *
     * @param bool|null $store_account_payment store_account_payment
     *
     * @return $this
     */
    public function setStoreAccountPayment($store_account_payment)
    {
        $this->container['store_account_payment'] = $store_account_payment;

        return $this;
    }

    /**
     * Gets sale_time
     *
     * @return \DateTime|null
     */
    public function getSaleTime()
    {
        return $this->container['sale_time'];
    }

    /**
     * Sets sale_time
     *
     * @param \DateTime|null $sale_time sale_time
     *
     * @return $this
     */
    public function setSaleTime($sale_time)
    {
        $this->container['sale_time'] = $sale_time;

        return $this;
    }

    /**
     * Gets subtotal
     *
     * @return float|null
     */
    public function getSubtotal()
    {
        return $this->container['subtotal'];
    }

    /**
     * Sets subtotal
     *
     * @param float|null $subtotal subtotal
     *
     * @return $this
     */
    public function setSubtotal($subtotal)
    {
        $this->container['subtotal'] = $subtotal;

        return $this;
    }

    /**
     * Gets tax
     *
     * @return float|null
     */
    public function getTax()
    {
        return $this->container['tax'];
    }

    /**
     * Sets tax
     *
     * @param float|null $tax tax
     *
     * @return $this
     */
    public function setTax($tax)
    {
        $this->container['tax'] = $tax;

        return $this;
    }

    /**
     * Gets total
     *
     * @return float|null
     */
    public function getTotal()
    {
        return $this->container['total'];
    }

    /**
     * Sets total
     *
     * @param float|null $total total
     *
     * @return $this
     */
    public function setTotal($total)
    {
        $this->container['total'] = $total;

        return $this;
    }

    /**
     * Gets profit
     *
     * @return float|null
     */
    public function getProfit()
    {
        return $this->container['profit'];
    }

    /**
     * Sets profit
     *
     * @param float|null $profit profit
     *
     * @return $this
     */
    public function setProfit($profit)
    {
        $this->container['profit'] = $profit;

        return $this;
    }

    /**
     * Gets tip
     *
     * @return float|null
     */
    public function getTip()
    {
        return $this->container['tip'];
    }

    /**
     * Sets tip
     *
     * @param float|null $tip tip
     *
     * @return $this
     */
    public function setTip($tip)
    {
        $this->container['tip'] = $tip;

        return $this;
    }

    /**
     * Gets deleted
     *
     * @return bool|null
     */
    public function getDeleted()
    {
        return $this->container['deleted'];
    }

    /**
     * Sets deleted
     *
     * @param bool|null $deleted deleted
     *
     * @return $this
     */
    public function setDeleted($deleted)
    {
        $this->container['deleted'] = $deleted;

        return $this;
    }

    /**
     * Gets customer_first_name
     *
     * @return string|null
     */
    public function getCustomerFirstName()
    {
        return $this->container['customer_first_name'];
    }

    /**
     * Sets customer_first_name
     *
     * @param string|null $customer_first_name customer_first_name
     *
     * @return $this
     */
    public function setCustomerFirstName($customer_first_name)
    {
        $this->container['customer_first_name'] = $customer_first_name;

        return $this;
    }

    /**
     * Gets customer_last_name
     *
     * @return string|null
     */
    public function getCustomerLastName()
    {
        return $this->container['customer_last_name'];
    }

    /**
     * Sets customer_last_name
     *
     * @param string|null $customer_last_name customer_last_name
     *
     * @return $this
     */
    public function setCustomerLastName($customer_last_name)
    {
        $this->container['customer_last_name'] = $customer_last_name;

        return $this;
    }

    /**
     * Gets customer_email
     *
     * @return string|null
     */
    public function getCustomerEmail()
    {
        return $this->container['customer_email'];
    }

    /**
     * Sets customer_email
     *
     * @param string|null $customer_email customer_email
     *
     * @return $this
     */
    public function setCustomerEmail($customer_email)
    {
        $this->container['customer_email'] = $customer_email;

        return $this;
    }

    /**
     * Gets customer_phone_number
     *
     * @return string|null
     */
    public function getCustomerPhoneNumber()
    {
        return $this->container['customer_phone_number'];
    }

    /**
     * Sets customer_phone_number
     *
     * @param string|null $customer_phone_number customer_phone_number
     *
     * @return $this
     */
    public function setCustomerPhoneNumber($customer_phone_number)
    {
        $this->container['customer_phone_number'] = $customer_phone_number;

        return $this;
    }

    /**
     * Gets customer_address_1
     *
     * @return string|null
     */
    public function getCustomerAddress1()
    {
        return $this->container['customer_address_1'];
    }

    /**
     * Sets customer_address_1
     *
     * @param string|null $customer_address_1 customer_address_1
     *
     * @return $this
     */
    public function setCustomerAddress1($customer_address_1)
    {
        $this->container['customer_address_1'] = $customer_address_1;

        return $this;
    }

    /**
     * Gets customer_address_2
     *
     * @return string|null
     */
    public function getCustomerAddress2()
    {
        return $this->container['customer_address_2'];
    }

    /**
     * Sets customer_address_2
     *
     * @param string|null $customer_address_2 customer_address_2
     *
     * @return $this
     */
    public function setCustomerAddress2($customer_address_2)
    {
        $this->container['customer_address_2'] = $customer_address_2;

        return $this;
    }

    /**
     * Gets customer_city
     *
     * @return string|null
     */
    public function getCustomerCity()
    {
        return $this->container['customer_city'];
    }

    /**
     * Sets customer_city
     *
     * @param string|null $customer_city customer_city
     *
     * @return $this
     */
    public function setCustomerCity($customer_city)
    {
        $this->container['customer_city'] = $customer_city;

        return $this;
    }

    /**
     * Gets customer_state
     *
     * @return string|null
     */
    public function getCustomerState()
    {
        return $this->container['customer_state'];
    }

    /**
     * Sets customer_state
     *
     * @param string|null $customer_state customer_state
     *
     * @return $this
     */
    public function setCustomerState($customer_state)
    {
        $this->container['customer_state'] = $customer_state;

        return $this;
    }

    /**
     * Gets customer_zip
     *
     * @return string|null
     */
    public function getCustomerZip()
    {
        return $this->container['customer_zip'];
    }

    /**
     * Sets customer_zip
     *
     * @param string|null $customer_zip customer_zip
     *
     * @return $this
     */
    public function setCustomerZip($customer_zip)
    {
        $this->container['customer_zip'] = $customer_zip;

        return $this;
    }

    /**
     * Gets customer_country
     *
     * @return string|null
     */
    public function getCustomerCountry()
    {
        return $this->container['customer_country'];
    }

    /**
     * Sets customer_country
     *
     * @param string|null $customer_country customer_country
     *
     * @return $this
     */
    public function setCustomerCountry($customer_country)
    {
        $this->container['customer_country'] = $customer_country;

        return $this;
    }

    /**
     * Gets customer_comments
     *
     * @return string|null
     */
    public function getCustomerComments()
    {
        return $this->container['customer_comments'];
    }

    /**
     * Sets customer_comments
     *
     * @param string|null $customer_comments customer_comments
     *
     * @return $this
     */
    public function setCustomerComments($customer_comments)
    {
        $this->container['customer_comments'] = $customer_comments;

        return $this;
    }

    /**
     * Gets customer_internal_notes
     *
     * @return string|null
     */
    public function getCustomerInternalNotes()
    {
        return $this->container['customer_internal_notes'];
    }

    /**
     * Sets customer_internal_notes
     *
     * @param string|null $customer_internal_notes customer_internal_notes
     *
     * @return $this
     */
    public function setCustomerInternalNotes($customer_internal_notes)
    {
        $this->container['customer_internal_notes'] = $customer_internal_notes;

        return $this;
    }

    /**
     * Gets customer_company_name
     *
     * @return string|null
     */
    public function getCustomerCompanyName()
    {
        return $this->container['customer_company_name'];
    }

    /**
     * Sets customer_company_name
     *
     * @param string|null $customer_company_name customer_company_name
     *
     * @return $this
     */
    public function setCustomerCompanyName($customer_company_name)
    {
        $this->container['customer_company_name'] = $customer_company_name;

        return $this;
    }

    /**
     * Gets customer_tier_id
     *
     * @return int|null
     */
    public function getCustomerTierId()
    {
        return $this->container['customer_tier_id'];
    }

    /**
     * Sets customer_tier_id
     *
     * @param int|null $customer_tier_id customer_tier_id
     *
     * @return $this
     */
    public function setCustomerTierId($customer_tier_id)
    {
        $this->container['customer_tier_id'] = $customer_tier_id;

        return $this;
    }

    /**
     * Gets customer_account_number
     *
     * @return string|null
     */
    public function getCustomerAccountNumber()
    {
        return $this->container['customer_account_number'];
    }

    /**
     * Sets customer_account_number
     *
     * @param string|null $customer_account_number customer_account_number
     *
     * @return $this
     */
    public function setCustomerAccountNumber($customer_account_number)
    {
        $this->container['customer_account_number'] = $customer_account_number;

        return $this;
    }

    /**
     * Gets customer_taxable
     *
     * @return bool|null
     */
    public function getCustomerTaxable()
    {
        return $this->container['customer_taxable'];
    }

    /**
     * Sets customer_taxable
     *
     * @param bool|null $customer_taxable customer_taxable
     *
     * @return $this
     */
    public function setCustomerTaxable($customer_taxable)
    {
        $this->container['customer_taxable'] = $customer_taxable;

        return $this;
    }

    /**
     * Gets customer_tax_certificate
     *
     * @return string|null
     */
    public function getCustomerTaxCertificate()
    {
        return $this->container['customer_tax_certificate'];
    }

    /**
     * Sets customer_tax_certificate
     *
     * @param string|null $customer_tax_certificate customer_tax_certificate
     *
     * @return $this
     */
    public function setCustomerTaxCertificate($customer_tax_certificate)
    {
        $this->container['customer_tax_certificate'] = $customer_tax_certificate;

        return $this;
    }

    /**
     * Gets customer_override_default_tax
     *
     * @return bool|null
     */
    public function getCustomerOverrideDefaultTax()
    {
        return $this->container['customer_override_default_tax'];
    }

    /**
     * Sets customer_override_default_tax
     *
     * @param bool|null $customer_override_default_tax customer_override_default_tax
     *
     * @return $this
     */
    public function setCustomerOverrideDefaultTax($customer_override_default_tax)
    {
        $this->container['customer_override_default_tax'] = $customer_override_default_tax;

        return $this;
    }

    /**
     * Gets customer_tax_class_id
     *
     * @return int|null
     */
    public function getCustomerTaxClassId()
    {
        return $this->container['customer_tax_class_id'];
    }

    /**
     * Sets customer_tax_class_id
     *
     * @param int|null $customer_tax_class_id customer_tax_class_id
     *
     * @return $this
     */
    public function setCustomerTaxClassId($customer_tax_class_id)
    {
        $this->container['customer_tax_class_id'] = $customer_tax_class_id;

        return $this;
    }

    /**
     * Gets customer_balance
     *
     * @return float|null
     */
    public function getCustomerBalance()
    {
        return $this->container['customer_balance'];
    }

    /**
     * Sets customer_balance
     *
     * @param float|null $customer_balance customer_balance
     *
     * @return $this
     */
    public function setCustomerBalance($customer_balance)
    {
        $this->container['customer_balance'] = $customer_balance;

        return $this;
    }

    /**
     * Gets customer_credit_limit
     *
     * @return float|null
     */
    public function getCustomerCreditLimit()
    {
        return $this->container['customer_credit_limit'];
    }

    /**
     * Sets customer_credit_limit
     *
     * @param float|null $customer_credit_limit customer_credit_limit
     *
     * @return $this
     */
    public function setCustomerCreditLimit($customer_credit_limit)
    {
        $this->container['customer_credit_limit'] = $customer_credit_limit;

        return $this;
    }

    /**
     * Gets customer_disable_loyalty
     *
     * @return bool|null
     */
    public function getCustomerDisableLoyalty()
    {
        return $this->container['customer_disable_loyalty'];
    }

    /**
     * Sets customer_disable_loyalty
     *
     * @param bool|null $customer_disable_loyalty customer_disable_loyalty
     *
     * @return $this
     */
    public function setCustomerDisableLoyalty($customer_disable_loyalty)
    {
        $this->container['customer_disable_loyalty'] = $customer_disable_loyalty;

        return $this;
    }

    /**
     * Gets customer_points
     *
     * @return int|null
     */
    public function getCustomerPoints()
    {
        return $this->container['customer_points'];
    }

    /**
     * Sets customer_points
     *
     * @param int|null $customer_points customer_points
     *
     * @return $this
     */
    public function setCustomerPoints($customer_points)
    {
        $this->container['customer_points'] = $customer_points;

        return $this;
    }

    /**
     * Gets customer_image_url
     *
     * @return string|null
     */
    public function getCustomerImageUrl()
    {
        return $this->container['customer_image_url'];
    }

    /**
     * Sets customer_image_url
     *
     * @param string|null $customer_image_url customer_image_url
     *
     * @return $this
     */
    public function setCustomerImageUrl($customer_image_url)
    {
        $this->container['customer_image_url'] = $customer_image_url;

        return $this;
    }

    /**
     * Gets customer_created_at
     *
     * @return \DateTime|null
     */
    public function getCustomerCreatedAt()
    {
        return $this->container['customer_created_at'];
    }

    /**
     * Sets customer_created_at
     *
     * @param \DateTime|null $customer_created_at customer_created_at
     *
     * @return $this
     */
    public function setCustomerCreatedAt($customer_created_at)
    {
        $this->container['customer_created_at'] = $customer_created_at;

        return $this;
    }

    /**
     * Gets customer_location_id
     *
     * @return int|null
     */
    public function getCustomerLocationId()
    {
        return $this->container['customer_location_id'];
    }

    /**
     * Sets customer_location_id
     *
     * @param int|null $customer_location_id customer_location_id
     *
     * @return $this
     */
    public function setCustomerLocationId($customer_location_id)
    {
        $this->container['customer_location_id'] = $customer_location_id;

        return $this;
    }
    /**
     * Returns true if offset exists. False otherwise.
     *
     * @param integer $offset Offset
     *
     * @return boolean
     */
    public function offsetExists($offset)
    {
        return isset($this->container[$offset]);
    }

    /**
     * Gets offset.
     *
     * @param integer $offset Offset
     *
     * @return mixed
     */
    public function offsetGet($offset)
    {
        return isset($this->container[$offset]) ? $this->container[$offset] : null;
    }

    /**
     * Sets value based on offset.
     *
     * @param integer $offset Offset
     * @param mixed   $value  Value to be set
     *
     * @return void
     */
    public function offsetSet($offset, $value)
    {
        if (is_null($offset)) {
            $this->container[] = $value;
        } else {
            $this->container[$offset] = $value;
        }
    }

    /**
     * Unsets offset.
     *
     * @param integer $offset Offset
     *
     * @return void
     */
    public function offsetUnset($offset)
    {
        unset($this->container[$offset]);
    }

    /**
     * Gets the string presentation of the object
     *
     * @return string
     */
    public function __toString()
    {
        return json_encode(
            ObjectSerializer::sanitizeForSerialization($this),
            JSON_PRETTY_PRINT
        );
    }
}


