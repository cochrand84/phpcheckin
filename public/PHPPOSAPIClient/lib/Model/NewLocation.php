<?php
/**
 * NewLocation
 *
 * PHP version 5
 *
 * @category Class
 * @package  OpenAPI\Client
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */

/**
 * PHP Point Of Sale API
 *
 * PHP Point Of Sale API  You can find out more about PHP POS at [https://phppointofsale.com](https://phppointofsale.com)
 *
 * The version of the OpenAPI document: 1.0
 * Contact: support@phppointofsale.com
 * Generated by: https://openapi-generator.tech
 * OpenAPI Generator version: 4.1.2
 */

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

namespace OpenAPI\Client\Model;

use \ArrayAccess;
use \OpenAPI\Client\ObjectSerializer;

/**
 * NewLocation Class Doc Comment
 *
 * @category Class
 * @package  OpenAPI\Client
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */
class NewLocation implements ModelInterface, ArrayAccess
{
    const DISCRIMINATOR = null;

    /**
      * The original name of the model.
      *
      * @var string
      */
    protected static $openAPIModelName = 'NewLocation';

    /**
      * Array of property to type mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $openAPITypes = [
        'name' => 'string',
        'address' => 'string',
        'color' => 'string',
        'company' => 'string',
        'website' => 'string',
        'phone' => 'string',
        'fax' => 'string',
        'email' => 'string',
        'cc_email' => 'string',
        'bcc_email' => 'string',
        'return_policy' => 'string',
        'receive_stock_alert' => 'bool',
        'stock_alert_email' => 'string',
        'timezone' => 'string',
        'mailchimp_api_key' => 'string',
        'platformly_api_key' => 'string',
        'platformly_project_id' => 'float',
        'enable_credit_card_processing' => 'bool',
        'credit_card_processor' => 'string',
        'stripe_public' => 'string',
        'stripe_private' => 'string',
        'braintree_merchant_id' => 'string',
        'braintree_public_key' => 'string',
        'braintree_private_key' => 'string',
        'stripe_currency_code' => 'string',
        'hosted_checkout_merchant_id' => 'string',
        'hosted_checkout_merchant_password' => 'string',
        'emv_merchant_id' => 'string',
        'net_e_pay_server' => 'string',
        'com_port' => 'string',
        'listener_port' => 'string',
        'secure_device_override_emv' => 'string',
        'secure_device_override_non_emv' => 'string',
        'ebt_integrated' => 'bool',
        'integrated_gift_cards' => 'bool',
        'tax_class_id' => 'float',
        'default_tax_1_rate' => 'float',
        'default_tax_1_name' => 'string',
        'default_tax_2_rate' => 'float',
        'default_tax_2_name' => 'string',
        'default_tax_2_cumulative' => 'bool',
        'default_tax_3_rate' => 'float',
        'default_tax_3_name' => 'string',
        'default_tax_4_rate' => 'float',
        'default_tax_4_name' => 'string',
        'default_tax_5_rate' => 'float',
        'default_tax_5_name' => 'string',
        'company_logo_url' => '\SplFileObject',
        'registers' => '\OpenAPI\Client\Model\Register[]'
    ];

    /**
      * Array of property to format mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $openAPIFormats = [
        'name' => null,
        'address' => null,
        'color' => null,
        'company' => null,
        'website' => null,
        'phone' => null,
        'fax' => null,
        'email' => null,
        'cc_email' => null,
        'bcc_email' => null,
        'return_policy' => null,
        'receive_stock_alert' => null,
        'stock_alert_email' => null,
        'timezone' => null,
        'mailchimp_api_key' => null,
        'platformly_api_key' => null,
        'platformly_project_id' => null,
        'enable_credit_card_processing' => null,
        'credit_card_processor' => null,
        'stripe_public' => null,
        'stripe_private' => null,
        'braintree_merchant_id' => null,
        'braintree_public_key' => null,
        'braintree_private_key' => null,
        'stripe_currency_code' => null,
        'hosted_checkout_merchant_id' => null,
        'hosted_checkout_merchant_password' => null,
        'emv_merchant_id' => null,
        'net_e_pay_server' => null,
        'com_port' => null,
        'listener_port' => null,
        'secure_device_override_emv' => null,
        'secure_device_override_non_emv' => null,
        'ebt_integrated' => null,
        'integrated_gift_cards' => null,
        'tax_class_id' => 'integer',
        'default_tax_1_rate' => 'float',
        'default_tax_1_name' => null,
        'default_tax_2_rate' => 'float',
        'default_tax_2_name' => null,
        'default_tax_2_cumulative' => null,
        'default_tax_3_rate' => 'float',
        'default_tax_3_name' => null,
        'default_tax_4_rate' => 'float',
        'default_tax_4_name' => null,
        'default_tax_5_rate' => 'float',
        'default_tax_5_name' => null,
        'company_logo_url' => 'binary',
        'registers' => null
    ];

    /**
     * Array of property to type mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function openAPITypes()
    {
        return self::$openAPITypes;
    }

    /**
     * Array of property to format mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function openAPIFormats()
    {
        return self::$openAPIFormats;
    }

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @var string[]
     */
    protected static $attributeMap = [
        'name' => 'name',
        'address' => 'address',
        'color' => 'color',
        'company' => 'company',
        'website' => 'website',
        'phone' => 'phone',
        'fax' => 'fax',
        'email' => 'email',
        'cc_email' => 'cc_email',
        'bcc_email' => 'bcc_email',
        'return_policy' => 'return_policy',
        'receive_stock_alert' => 'receive_stock_alert',
        'stock_alert_email' => 'stock_alert_email',
        'timezone' => 'timezone',
        'mailchimp_api_key' => 'mailchimp_api_key',
        'platformly_api_key' => 'platformly_api_key',
        'platformly_project_id' => 'platformly_project_id',
        'enable_credit_card_processing' => 'enable_credit_card_processing',
        'credit_card_processor' => 'credit_card_processor',
        'stripe_public' => 'stripe_public',
        'stripe_private' => 'stripe_private',
        'braintree_merchant_id' => 'braintree_merchant_id',
        'braintree_public_key' => 'braintree_public_key',
        'braintree_private_key' => 'braintree_private_key',
        'stripe_currency_code' => 'stripe_currency_code',
        'hosted_checkout_merchant_id' => 'hosted_checkout_merchant_id',
        'hosted_checkout_merchant_password' => 'hosted_checkout_merchant_password',
        'emv_merchant_id' => 'emv_merchant_id',
        'net_e_pay_server' => 'net_e_pay_server',
        'com_port' => 'com_port',
        'listener_port' => 'listener_port',
        'secure_device_override_emv' => 'secure_device_override_emv',
        'secure_device_override_non_emv' => 'secure_device_override_non_emv',
        'ebt_integrated' => 'ebt_integrated',
        'integrated_gift_cards' => 'integrated_gift_cards',
        'tax_class_id' => 'tax_class_id',
        'default_tax_1_rate' => 'default_tax_1_rate',
        'default_tax_1_name' => 'default_tax_1_name',
        'default_tax_2_rate' => 'default_tax_2_rate',
        'default_tax_2_name' => 'default_tax_2_name',
        'default_tax_2_cumulative' => 'default_tax_2_cumulative',
        'default_tax_3_rate' => 'default_tax_3_rate',
        'default_tax_3_name' => 'default_tax_3_name',
        'default_tax_4_rate' => 'default_tax_4_rate',
        'default_tax_4_name' => 'default_tax_4_name',
        'default_tax_5_rate' => 'default_tax_5_rate',
        'default_tax_5_name' => 'default_tax_5_name',
        'company_logo_url' => 'company_logo_url',
        'registers' => 'registers'
    ];

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @var string[]
     */
    protected static $setters = [
        'name' => 'setName',
        'address' => 'setAddress',
        'color' => 'setColor',
        'company' => 'setCompany',
        'website' => 'setWebsite',
        'phone' => 'setPhone',
        'fax' => 'setFax',
        'email' => 'setEmail',
        'cc_email' => 'setCcEmail',
        'bcc_email' => 'setBccEmail',
        'return_policy' => 'setReturnPolicy',
        'receive_stock_alert' => 'setReceiveStockAlert',
        'stock_alert_email' => 'setStockAlertEmail',
        'timezone' => 'setTimezone',
        'mailchimp_api_key' => 'setMailchimpApiKey',
        'platformly_api_key' => 'setPlatformlyApiKey',
        'platformly_project_id' => 'setPlatformlyProjectId',
        'enable_credit_card_processing' => 'setEnableCreditCardProcessing',
        'credit_card_processor' => 'setCreditCardProcessor',
        'stripe_public' => 'setStripePublic',
        'stripe_private' => 'setStripePrivate',
        'braintree_merchant_id' => 'setBraintreeMerchantId',
        'braintree_public_key' => 'setBraintreePublicKey',
        'braintree_private_key' => 'setBraintreePrivateKey',
        'stripe_currency_code' => 'setStripeCurrencyCode',
        'hosted_checkout_merchant_id' => 'setHostedCheckoutMerchantId',
        'hosted_checkout_merchant_password' => 'setHostedCheckoutMerchantPassword',
        'emv_merchant_id' => 'setEmvMerchantId',
        'net_e_pay_server' => 'setNetEPayServer',
        'com_port' => 'setComPort',
        'listener_port' => 'setListenerPort',
        'secure_device_override_emv' => 'setSecureDeviceOverrideEmv',
        'secure_device_override_non_emv' => 'setSecureDeviceOverrideNonEmv',
        'ebt_integrated' => 'setEbtIntegrated',
        'integrated_gift_cards' => 'setIntegratedGiftCards',
        'tax_class_id' => 'setTaxClassId',
        'default_tax_1_rate' => 'setDefaultTax1Rate',
        'default_tax_1_name' => 'setDefaultTax1Name',
        'default_tax_2_rate' => 'setDefaultTax2Rate',
        'default_tax_2_name' => 'setDefaultTax2Name',
        'default_tax_2_cumulative' => 'setDefaultTax2Cumulative',
        'default_tax_3_rate' => 'setDefaultTax3Rate',
        'default_tax_3_name' => 'setDefaultTax3Name',
        'default_tax_4_rate' => 'setDefaultTax4Rate',
        'default_tax_4_name' => 'setDefaultTax4Name',
        'default_tax_5_rate' => 'setDefaultTax5Rate',
        'default_tax_5_name' => 'setDefaultTax5Name',
        'company_logo_url' => 'setCompanyLogoUrl',
        'registers' => 'setRegisters'
    ];

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @var string[]
     */
    protected static $getters = [
        'name' => 'getName',
        'address' => 'getAddress',
        'color' => 'getColor',
        'company' => 'getCompany',
        'website' => 'getWebsite',
        'phone' => 'getPhone',
        'fax' => 'getFax',
        'email' => 'getEmail',
        'cc_email' => 'getCcEmail',
        'bcc_email' => 'getBccEmail',
        'return_policy' => 'getReturnPolicy',
        'receive_stock_alert' => 'getReceiveStockAlert',
        'stock_alert_email' => 'getStockAlertEmail',
        'timezone' => 'getTimezone',
        'mailchimp_api_key' => 'getMailchimpApiKey',
        'platformly_api_key' => 'getPlatformlyApiKey',
        'platformly_project_id' => 'getPlatformlyProjectId',
        'enable_credit_card_processing' => 'getEnableCreditCardProcessing',
        'credit_card_processor' => 'getCreditCardProcessor',
        'stripe_public' => 'getStripePublic',
        'stripe_private' => 'getStripePrivate',
        'braintree_merchant_id' => 'getBraintreeMerchantId',
        'braintree_public_key' => 'getBraintreePublicKey',
        'braintree_private_key' => 'getBraintreePrivateKey',
        'stripe_currency_code' => 'getStripeCurrencyCode',
        'hosted_checkout_merchant_id' => 'getHostedCheckoutMerchantId',
        'hosted_checkout_merchant_password' => 'getHostedCheckoutMerchantPassword',
        'emv_merchant_id' => 'getEmvMerchantId',
        'net_e_pay_server' => 'getNetEPayServer',
        'com_port' => 'getComPort',
        'listener_port' => 'getListenerPort',
        'secure_device_override_emv' => 'getSecureDeviceOverrideEmv',
        'secure_device_override_non_emv' => 'getSecureDeviceOverrideNonEmv',
        'ebt_integrated' => 'getEbtIntegrated',
        'integrated_gift_cards' => 'getIntegratedGiftCards',
        'tax_class_id' => 'getTaxClassId',
        'default_tax_1_rate' => 'getDefaultTax1Rate',
        'default_tax_1_name' => 'getDefaultTax1Name',
        'default_tax_2_rate' => 'getDefaultTax2Rate',
        'default_tax_2_name' => 'getDefaultTax2Name',
        'default_tax_2_cumulative' => 'getDefaultTax2Cumulative',
        'default_tax_3_rate' => 'getDefaultTax3Rate',
        'default_tax_3_name' => 'getDefaultTax3Name',
        'default_tax_4_rate' => 'getDefaultTax4Rate',
        'default_tax_4_name' => 'getDefaultTax4Name',
        'default_tax_5_rate' => 'getDefaultTax5Rate',
        'default_tax_5_name' => 'getDefaultTax5Name',
        'company_logo_url' => 'getCompanyLogoUrl',
        'registers' => 'getRegisters'
    ];

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @return array
     */
    public static function attributeMap()
    {
        return self::$attributeMap;
    }

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @return array
     */
    public static function setters()
    {
        return self::$setters;
    }

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @return array
     */
    public static function getters()
    {
        return self::$getters;
    }

    /**
     * The original name of the model.
     *
     * @return string
     */
    public function getModelName()
    {
        return self::$openAPIModelName;
    }

    

    

    /**
     * Associative array for storing property values
     *
     * @var mixed[]
     */
    protected $container = [];

    /**
     * Constructor
     *
     * @param mixed[] $data Associated array of property values
     *                      initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->container['name'] = isset($data['name']) ? $data['name'] : null;
        $this->container['address'] = isset($data['address']) ? $data['address'] : null;
        $this->container['color'] = isset($data['color']) ? $data['color'] : null;
        $this->container['company'] = isset($data['company']) ? $data['company'] : null;
        $this->container['website'] = isset($data['website']) ? $data['website'] : null;
        $this->container['phone'] = isset($data['phone']) ? $data['phone'] : null;
        $this->container['fax'] = isset($data['fax']) ? $data['fax'] : null;
        $this->container['email'] = isset($data['email']) ? $data['email'] : null;
        $this->container['cc_email'] = isset($data['cc_email']) ? $data['cc_email'] : null;
        $this->container['bcc_email'] = isset($data['bcc_email']) ? $data['bcc_email'] : null;
        $this->container['return_policy'] = isset($data['return_policy']) ? $data['return_policy'] : null;
        $this->container['receive_stock_alert'] = isset($data['receive_stock_alert']) ? $data['receive_stock_alert'] : null;
        $this->container['stock_alert_email'] = isset($data['stock_alert_email']) ? $data['stock_alert_email'] : null;
        $this->container['timezone'] = isset($data['timezone']) ? $data['timezone'] : null;
        $this->container['mailchimp_api_key'] = isset($data['mailchimp_api_key']) ? $data['mailchimp_api_key'] : null;
        $this->container['platformly_api_key'] = isset($data['platformly_api_key']) ? $data['platformly_api_key'] : null;
        $this->container['platformly_project_id'] = isset($data['platformly_project_id']) ? $data['platformly_project_id'] : null;
        $this->container['enable_credit_card_processing'] = isset($data['enable_credit_card_processing']) ? $data['enable_credit_card_processing'] : null;
        $this->container['credit_card_processor'] = isset($data['credit_card_processor']) ? $data['credit_card_processor'] : null;
        $this->container['stripe_public'] = isset($data['stripe_public']) ? $data['stripe_public'] : null;
        $this->container['stripe_private'] = isset($data['stripe_private']) ? $data['stripe_private'] : null;
        $this->container['braintree_merchant_id'] = isset($data['braintree_merchant_id']) ? $data['braintree_merchant_id'] : null;
        $this->container['braintree_public_key'] = isset($data['braintree_public_key']) ? $data['braintree_public_key'] : null;
        $this->container['braintree_private_key'] = isset($data['braintree_private_key']) ? $data['braintree_private_key'] : null;
        $this->container['stripe_currency_code'] = isset($data['stripe_currency_code']) ? $data['stripe_currency_code'] : null;
        $this->container['hosted_checkout_merchant_id'] = isset($data['hosted_checkout_merchant_id']) ? $data['hosted_checkout_merchant_id'] : null;
        $this->container['hosted_checkout_merchant_password'] = isset($data['hosted_checkout_merchant_password']) ? $data['hosted_checkout_merchant_password'] : null;
        $this->container['emv_merchant_id'] = isset($data['emv_merchant_id']) ? $data['emv_merchant_id'] : null;
        $this->container['net_e_pay_server'] = isset($data['net_e_pay_server']) ? $data['net_e_pay_server'] : null;
        $this->container['com_port'] = isset($data['com_port']) ? $data['com_port'] : null;
        $this->container['listener_port'] = isset($data['listener_port']) ? $data['listener_port'] : null;
        $this->container['secure_device_override_emv'] = isset($data['secure_device_override_emv']) ? $data['secure_device_override_emv'] : null;
        $this->container['secure_device_override_non_emv'] = isset($data['secure_device_override_non_emv']) ? $data['secure_device_override_non_emv'] : null;
        $this->container['ebt_integrated'] = isset($data['ebt_integrated']) ? $data['ebt_integrated'] : null;
        $this->container['integrated_gift_cards'] = isset($data['integrated_gift_cards']) ? $data['integrated_gift_cards'] : null;
        $this->container['tax_class_id'] = isset($data['tax_class_id']) ? $data['tax_class_id'] : null;
        $this->container['default_tax_1_rate'] = isset($data['default_tax_1_rate']) ? $data['default_tax_1_rate'] : null;
        $this->container['default_tax_1_name'] = isset($data['default_tax_1_name']) ? $data['default_tax_1_name'] : null;
        $this->container['default_tax_2_rate'] = isset($data['default_tax_2_rate']) ? $data['default_tax_2_rate'] : null;
        $this->container['default_tax_2_name'] = isset($data['default_tax_2_name']) ? $data['default_tax_2_name'] : null;
        $this->container['default_tax_2_cumulative'] = isset($data['default_tax_2_cumulative']) ? $data['default_tax_2_cumulative'] : null;
        $this->container['default_tax_3_rate'] = isset($data['default_tax_3_rate']) ? $data['default_tax_3_rate'] : null;
        $this->container['default_tax_3_name'] = isset($data['default_tax_3_name']) ? $data['default_tax_3_name'] : null;
        $this->container['default_tax_4_rate'] = isset($data['default_tax_4_rate']) ? $data['default_tax_4_rate'] : null;
        $this->container['default_tax_4_name'] = isset($data['default_tax_4_name']) ? $data['default_tax_4_name'] : null;
        $this->container['default_tax_5_rate'] = isset($data['default_tax_5_rate']) ? $data['default_tax_5_rate'] : null;
        $this->container['default_tax_5_name'] = isset($data['default_tax_5_name']) ? $data['default_tax_5_name'] : null;
        $this->container['company_logo_url'] = isset($data['company_logo_url']) ? $data['company_logo_url'] : null;
        $this->container['registers'] = isset($data['registers']) ? $data['registers'] : null;
    }

    /**
     * Show all the invalid properties with reasons.
     *
     * @return array invalid properties with reasons
     */
    public function listInvalidProperties()
    {
        $invalidProperties = [];

        return $invalidProperties;
    }

    /**
     * Validate all the properties in the model
     * return true if all passed
     *
     * @return bool True if all properties are valid
     */
    public function valid()
    {
        return count($this->listInvalidProperties()) === 0;
    }


    /**
     * Gets name
     *
     * @return string|null
     */
    public function getName()
    {
        return $this->container['name'];
    }

    /**
     * Sets name
     *
     * @param string|null $name name
     *
     * @return $this
     */
    public function setName($name)
    {
        $this->container['name'] = $name;

        return $this;
    }

    /**
     * Gets address
     *
     * @return string|null
     */
    public function getAddress()
    {
        return $this->container['address'];
    }

    /**
     * Sets address
     *
     * @param string|null $address address
     *
     * @return $this
     */
    public function setAddress($address)
    {
        $this->container['address'] = $address;

        return $this;
    }

    /**
     * Gets color
     *
     * @return string|null
     */
    public function getColor()
    {
        return $this->container['color'];
    }

    /**
     * Sets color
     *
     * @param string|null $color color
     *
     * @return $this
     */
    public function setColor($color)
    {
        $this->container['color'] = $color;

        return $this;
    }

    /**
     * Gets company
     *
     * @return string|null
     */
    public function getCompany()
    {
        return $this->container['company'];
    }

    /**
     * Sets company
     *
     * @param string|null $company company
     *
     * @return $this
     */
    public function setCompany($company)
    {
        $this->container['company'] = $company;

        return $this;
    }

    /**
     * Gets website
     *
     * @return string|null
     */
    public function getWebsite()
    {
        return $this->container['website'];
    }

    /**
     * Sets website
     *
     * @param string|null $website website
     *
     * @return $this
     */
    public function setWebsite($website)
    {
        $this->container['website'] = $website;

        return $this;
    }

    /**
     * Gets phone
     *
     * @return string|null
     */
    public function getPhone()
    {
        return $this->container['phone'];
    }

    /**
     * Sets phone
     *
     * @param string|null $phone phone
     *
     * @return $this
     */
    public function setPhone($phone)
    {
        $this->container['phone'] = $phone;

        return $this;
    }

    /**
     * Gets fax
     *
     * @return string|null
     */
    public function getFax()
    {
        return $this->container['fax'];
    }

    /**
     * Sets fax
     *
     * @param string|null $fax fax
     *
     * @return $this
     */
    public function setFax($fax)
    {
        $this->container['fax'] = $fax;

        return $this;
    }

    /**
     * Gets email
     *
     * @return string|null
     */
    public function getEmail()
    {
        return $this->container['email'];
    }

    /**
     * Sets email
     *
     * @param string|null $email email
     *
     * @return $this
     */
    public function setEmail($email)
    {
        $this->container['email'] = $email;

        return $this;
    }

    /**
     * Gets cc_email
     *
     * @return string|null
     */
    public function getCcEmail()
    {
        return $this->container['cc_email'];
    }

    /**
     * Sets cc_email
     *
     * @param string|null $cc_email cc_email
     *
     * @return $this
     */
    public function setCcEmail($cc_email)
    {
        $this->container['cc_email'] = $cc_email;

        return $this;
    }

    /**
     * Gets bcc_email
     *
     * @return string|null
     */
    public function getBccEmail()
    {
        return $this->container['bcc_email'];
    }

    /**
     * Sets bcc_email
     *
     * @param string|null $bcc_email bcc_email
     *
     * @return $this
     */
    public function setBccEmail($bcc_email)
    {
        $this->container['bcc_email'] = $bcc_email;

        return $this;
    }

    /**
     * Gets return_policy
     *
     * @return string|null
     */
    public function getReturnPolicy()
    {
        return $this->container['return_policy'];
    }

    /**
     * Sets return_policy
     *
     * @param string|null $return_policy return_policy
     *
     * @return $this
     */
    public function setReturnPolicy($return_policy)
    {
        $this->container['return_policy'] = $return_policy;

        return $this;
    }

    /**
     * Gets receive_stock_alert
     *
     * @return bool|null
     */
    public function getReceiveStockAlert()
    {
        return $this->container['receive_stock_alert'];
    }

    /**
     * Sets receive_stock_alert
     *
     * @param bool|null $receive_stock_alert receive_stock_alert
     *
     * @return $this
     */
    public function setReceiveStockAlert($receive_stock_alert)
    {
        $this->container['receive_stock_alert'] = $receive_stock_alert;

        return $this;
    }

    /**
     * Gets stock_alert_email
     *
     * @return string|null
     */
    public function getStockAlertEmail()
    {
        return $this->container['stock_alert_email'];
    }

    /**
     * Sets stock_alert_email
     *
     * @param string|null $stock_alert_email stock_alert_email
     *
     * @return $this
     */
    public function setStockAlertEmail($stock_alert_email)
    {
        $this->container['stock_alert_email'] = $stock_alert_email;

        return $this;
    }

    /**
     * Gets timezone
     *
     * @return string|null
     */
    public function getTimezone()
    {
        return $this->container['timezone'];
    }

    /**
     * Sets timezone
     *
     * @param string|null $timezone timezone
     *
     * @return $this
     */
    public function setTimezone($timezone)
    {
        $this->container['timezone'] = $timezone;

        return $this;
    }

    /**
     * Gets mailchimp_api_key
     *
     * @return string|null
     */
    public function getMailchimpApiKey()
    {
        return $this->container['mailchimp_api_key'];
    }

    /**
     * Sets mailchimp_api_key
     *
     * @param string|null $mailchimp_api_key mailchimp_api_key
     *
     * @return $this
     */
    public function setMailchimpApiKey($mailchimp_api_key)
    {
        $this->container['mailchimp_api_key'] = $mailchimp_api_key;

        return $this;
    }

    /**
     * Gets platformly_api_key
     *
     * @return string|null
     */
    public function getPlatformlyApiKey()
    {
        return $this->container['platformly_api_key'];
    }

    /**
     * Sets platformly_api_key
     *
     * @param string|null $platformly_api_key platformly_api_key
     *
     * @return $this
     */
    public function setPlatformlyApiKey($platformly_api_key)
    {
        $this->container['platformly_api_key'] = $platformly_api_key;

        return $this;
    }

    /**
     * Gets platformly_project_id
     *
     * @return float|null
     */
    public function getPlatformlyProjectId()
    {
        return $this->container['platformly_project_id'];
    }

    /**
     * Sets platformly_project_id
     *
     * @param float|null $platformly_project_id platformly_project_id
     *
     * @return $this
     */
    public function setPlatformlyProjectId($platformly_project_id)
    {
        $this->container['platformly_project_id'] = $platformly_project_id;

        return $this;
    }

    /**
     * Gets enable_credit_card_processing
     *
     * @return bool|null
     */
    public function getEnableCreditCardProcessing()
    {
        return $this->container['enable_credit_card_processing'];
    }

    /**
     * Sets enable_credit_card_processing
     *
     * @param bool|null $enable_credit_card_processing enable_credit_card_processing
     *
     * @return $this
     */
    public function setEnableCreditCardProcessing($enable_credit_card_processing)
    {
        $this->container['enable_credit_card_processing'] = $enable_credit_card_processing;

        return $this;
    }

    /**
     * Gets credit_card_processor
     *
     * @return string|null
     */
    public function getCreditCardProcessor()
    {
        return $this->container['credit_card_processor'];
    }

    /**
     * Sets credit_card_processor
     *
     * @param string|null $credit_card_processor credit_card_processor
     *
     * @return $this
     */
    public function setCreditCardProcessor($credit_card_processor)
    {
        $this->container['credit_card_processor'] = $credit_card_processor;

        return $this;
    }

    /**
     * Gets stripe_public
     *
     * @return string|null
     */
    public function getStripePublic()
    {
        return $this->container['stripe_public'];
    }

    /**
     * Sets stripe_public
     *
     * @param string|null $stripe_public stripe_public
     *
     * @return $this
     */
    public function setStripePublic($stripe_public)
    {
        $this->container['stripe_public'] = $stripe_public;

        return $this;
    }

    /**
     * Gets stripe_private
     *
     * @return string|null
     */
    public function getStripePrivate()
    {
        return $this->container['stripe_private'];
    }

    /**
     * Sets stripe_private
     *
     * @param string|null $stripe_private stripe_private
     *
     * @return $this
     */
    public function setStripePrivate($stripe_private)
    {
        $this->container['stripe_private'] = $stripe_private;

        return $this;
    }

    /**
     * Gets braintree_merchant_id
     *
     * @return string|null
     */
    public function getBraintreeMerchantId()
    {
        return $this->container['braintree_merchant_id'];
    }

    /**
     * Sets braintree_merchant_id
     *
     * @param string|null $braintree_merchant_id braintree_merchant_id
     *
     * @return $this
     */
    public function setBraintreeMerchantId($braintree_merchant_id)
    {
        $this->container['braintree_merchant_id'] = $braintree_merchant_id;

        return $this;
    }

    /**
     * Gets braintree_public_key
     *
     * @return string|null
     */
    public function getBraintreePublicKey()
    {
        return $this->container['braintree_public_key'];
    }

    /**
     * Sets braintree_public_key
     *
     * @param string|null $braintree_public_key braintree_public_key
     *
     * @return $this
     */
    public function setBraintreePublicKey($braintree_public_key)
    {
        $this->container['braintree_public_key'] = $braintree_public_key;

        return $this;
    }

    /**
     * Gets braintree_private_key
     *
     * @return string|null
     */
    public function getBraintreePrivateKey()
    {
        return $this->container['braintree_private_key'];
    }

    /**
     * Sets braintree_private_key
     *
     * @param string|null $braintree_private_key braintree_private_key
     *
     * @return $this
     */
    public function setBraintreePrivateKey($braintree_private_key)
    {
        $this->container['braintree_private_key'] = $braintree_private_key;

        return $this;
    }

    /**
     * Gets stripe_currency_code
     *
     * @return string|null
     */
    public function getStripeCurrencyCode()
    {
        return $this->container['stripe_currency_code'];
    }

    /**
     * Sets stripe_currency_code
     *
     * @param string|null $stripe_currency_code stripe_currency_code
     *
     * @return $this
     */
    public function setStripeCurrencyCode($stripe_currency_code)
    {
        $this->container['stripe_currency_code'] = $stripe_currency_code;

        return $this;
    }

    /**
     * Gets hosted_checkout_merchant_id
     *
     * @return string|null
     */
    public function getHostedCheckoutMerchantId()
    {
        return $this->container['hosted_checkout_merchant_id'];
    }

    /**
     * Sets hosted_checkout_merchant_id
     *
     * @param string|null $hosted_checkout_merchant_id hosted_checkout_merchant_id
     *
     * @return $this
     */
    public function setHostedCheckoutMerchantId($hosted_checkout_merchant_id)
    {
        $this->container['hosted_checkout_merchant_id'] = $hosted_checkout_merchant_id;

        return $this;
    }

    /**
     * Gets hosted_checkout_merchant_password
     *
     * @return string|null
     */
    public function getHostedCheckoutMerchantPassword()
    {
        return $this->container['hosted_checkout_merchant_password'];
    }

    /**
     * Sets hosted_checkout_merchant_password
     *
     * @param string|null $hosted_checkout_merchant_password hosted_checkout_merchant_password
     *
     * @return $this
     */
    public function setHostedCheckoutMerchantPassword($hosted_checkout_merchant_password)
    {
        $this->container['hosted_checkout_merchant_password'] = $hosted_checkout_merchant_password;

        return $this;
    }

    /**
     * Gets emv_merchant_id
     *
     * @return string|null
     */
    public function getEmvMerchantId()
    {
        return $this->container['emv_merchant_id'];
    }

    /**
     * Sets emv_merchant_id
     *
     * @param string|null $emv_merchant_id emv_merchant_id
     *
     * @return $this
     */
    public function setEmvMerchantId($emv_merchant_id)
    {
        $this->container['emv_merchant_id'] = $emv_merchant_id;

        return $this;
    }

    /**
     * Gets net_e_pay_server
     *
     * @return string|null
     */
    public function getNetEPayServer()
    {
        return $this->container['net_e_pay_server'];
    }

    /**
     * Sets net_e_pay_server
     *
     * @param string|null $net_e_pay_server net_e_pay_server
     *
     * @return $this
     */
    public function setNetEPayServer($net_e_pay_server)
    {
        $this->container['net_e_pay_server'] = $net_e_pay_server;

        return $this;
    }

    /**
     * Gets com_port
     *
     * @return string|null
     */
    public function getComPort()
    {
        return $this->container['com_port'];
    }

    /**
     * Sets com_port
     *
     * @param string|null $com_port com_port
     *
     * @return $this
     */
    public function setComPort($com_port)
    {
        $this->container['com_port'] = $com_port;

        return $this;
    }

    /**
     * Gets listener_port
     *
     * @return string|null
     */
    public function getListenerPort()
    {
        return $this->container['listener_port'];
    }

    /**
     * Sets listener_port
     *
     * @param string|null $listener_port listener_port
     *
     * @return $this
     */
    public function setListenerPort($listener_port)
    {
        $this->container['listener_port'] = $listener_port;

        return $this;
    }

    /**
     * Gets secure_device_override_emv
     *
     * @return string|null
     */
    public function getSecureDeviceOverrideEmv()
    {
        return $this->container['secure_device_override_emv'];
    }

    /**
     * Sets secure_device_override_emv
     *
     * @param string|null $secure_device_override_emv secure_device_override_emv
     *
     * @return $this
     */
    public function setSecureDeviceOverrideEmv($secure_device_override_emv)
    {
        $this->container['secure_device_override_emv'] = $secure_device_override_emv;

        return $this;
    }

    /**
     * Gets secure_device_override_non_emv
     *
     * @return string|null
     */
    public function getSecureDeviceOverrideNonEmv()
    {
        return $this->container['secure_device_override_non_emv'];
    }

    /**
     * Sets secure_device_override_non_emv
     *
     * @param string|null $secure_device_override_non_emv secure_device_override_non_emv
     *
     * @return $this
     */
    public function setSecureDeviceOverrideNonEmv($secure_device_override_non_emv)
    {
        $this->container['secure_device_override_non_emv'] = $secure_device_override_non_emv;

        return $this;
    }

    /**
     * Gets ebt_integrated
     *
     * @return bool|null
     */
    public function getEbtIntegrated()
    {
        return $this->container['ebt_integrated'];
    }

    /**
     * Sets ebt_integrated
     *
     * @param bool|null $ebt_integrated ebt_integrated
     *
     * @return $this
     */
    public function setEbtIntegrated($ebt_integrated)
    {
        $this->container['ebt_integrated'] = $ebt_integrated;

        return $this;
    }

    /**
     * Gets integrated_gift_cards
     *
     * @return bool|null
     */
    public function getIntegratedGiftCards()
    {
        return $this->container['integrated_gift_cards'];
    }

    /**
     * Sets integrated_gift_cards
     *
     * @param bool|null $integrated_gift_cards integrated_gift_cards
     *
     * @return $this
     */
    public function setIntegratedGiftCards($integrated_gift_cards)
    {
        $this->container['integrated_gift_cards'] = $integrated_gift_cards;

        return $this;
    }

    /**
     * Gets tax_class_id
     *
     * @return float|null
     */
    public function getTaxClassId()
    {
        return $this->container['tax_class_id'];
    }

    /**
     * Sets tax_class_id
     *
     * @param float|null $tax_class_id tax_class_id
     *
     * @return $this
     */
    public function setTaxClassId($tax_class_id)
    {
        $this->container['tax_class_id'] = $tax_class_id;

        return $this;
    }

    /**
     * Gets default_tax_1_rate
     *
     * @return float|null
     */
    public function getDefaultTax1Rate()
    {
        return $this->container['default_tax_1_rate'];
    }

    /**
     * Sets default_tax_1_rate
     *
     * @param float|null $default_tax_1_rate default_tax_1_rate
     *
     * @return $this
     */
    public function setDefaultTax1Rate($default_tax_1_rate)
    {
        $this->container['default_tax_1_rate'] = $default_tax_1_rate;

        return $this;
    }

    /**
     * Gets default_tax_1_name
     *
     * @return string|null
     */
    public function getDefaultTax1Name()
    {
        return $this->container['default_tax_1_name'];
    }

    /**
     * Sets default_tax_1_name
     *
     * @param string|null $default_tax_1_name default_tax_1_name
     *
     * @return $this
     */
    public function setDefaultTax1Name($default_tax_1_name)
    {
        $this->container['default_tax_1_name'] = $default_tax_1_name;

        return $this;
    }

    /**
     * Gets default_tax_2_rate
     *
     * @return float|null
     */
    public function getDefaultTax2Rate()
    {
        return $this->container['default_tax_2_rate'];
    }

    /**
     * Sets default_tax_2_rate
     *
     * @param float|null $default_tax_2_rate default_tax_2_rate
     *
     * @return $this
     */
    public function setDefaultTax2Rate($default_tax_2_rate)
    {
        $this->container['default_tax_2_rate'] = $default_tax_2_rate;

        return $this;
    }

    /**
     * Gets default_tax_2_name
     *
     * @return string|null
     */
    public function getDefaultTax2Name()
    {
        return $this->container['default_tax_2_name'];
    }

    /**
     * Sets default_tax_2_name
     *
     * @param string|null $default_tax_2_name default_tax_2_name
     *
     * @return $this
     */
    public function setDefaultTax2Name($default_tax_2_name)
    {
        $this->container['default_tax_2_name'] = $default_tax_2_name;

        return $this;
    }

    /**
     * Gets default_tax_2_cumulative
     *
     * @return bool|null
     */
    public function getDefaultTax2Cumulative()
    {
        return $this->container['default_tax_2_cumulative'];
    }

    /**
     * Sets default_tax_2_cumulative
     *
     * @param bool|null $default_tax_2_cumulative default_tax_2_cumulative
     *
     * @return $this
     */
    public function setDefaultTax2Cumulative($default_tax_2_cumulative)
    {
        $this->container['default_tax_2_cumulative'] = $default_tax_2_cumulative;

        return $this;
    }

    /**
     * Gets default_tax_3_rate
     *
     * @return float|null
     */
    public function getDefaultTax3Rate()
    {
        return $this->container['default_tax_3_rate'];
    }

    /**
     * Sets default_tax_3_rate
     *
     * @param float|null $default_tax_3_rate default_tax_3_rate
     *
     * @return $this
     */
    public function setDefaultTax3Rate($default_tax_3_rate)
    {
        $this->container['default_tax_3_rate'] = $default_tax_3_rate;

        return $this;
    }

    /**
     * Gets default_tax_3_name
     *
     * @return string|null
     */
    public function getDefaultTax3Name()
    {
        return $this->container['default_tax_3_name'];
    }

    /**
     * Sets default_tax_3_name
     *
     * @param string|null $default_tax_3_name default_tax_3_name
     *
     * @return $this
     */
    public function setDefaultTax3Name($default_tax_3_name)
    {
        $this->container['default_tax_3_name'] = $default_tax_3_name;

        return $this;
    }

    /**
     * Gets default_tax_4_rate
     *
     * @return float|null
     */
    public function getDefaultTax4Rate()
    {
        return $this->container['default_tax_4_rate'];
    }

    /**
     * Sets default_tax_4_rate
     *
     * @param float|null $default_tax_4_rate default_tax_4_rate
     *
     * @return $this
     */
    public function setDefaultTax4Rate($default_tax_4_rate)
    {
        $this->container['default_tax_4_rate'] = $default_tax_4_rate;

        return $this;
    }

    /**
     * Gets default_tax_4_name
     *
     * @return string|null
     */
    public function getDefaultTax4Name()
    {
        return $this->container['default_tax_4_name'];
    }

    /**
     * Sets default_tax_4_name
     *
     * @param string|null $default_tax_4_name default_tax_4_name
     *
     * @return $this
     */
    public function setDefaultTax4Name($default_tax_4_name)
    {
        $this->container['default_tax_4_name'] = $default_tax_4_name;

        return $this;
    }

    /**
     * Gets default_tax_5_rate
     *
     * @return float|null
     */
    public function getDefaultTax5Rate()
    {
        return $this->container['default_tax_5_rate'];
    }

    /**
     * Sets default_tax_5_rate
     *
     * @param float|null $default_tax_5_rate default_tax_5_rate
     *
     * @return $this
     */
    public function setDefaultTax5Rate($default_tax_5_rate)
    {
        $this->container['default_tax_5_rate'] = $default_tax_5_rate;

        return $this;
    }

    /**
     * Gets default_tax_5_name
     *
     * @return string|null
     */
    public function getDefaultTax5Name()
    {
        return $this->container['default_tax_5_name'];
    }

    /**
     * Sets default_tax_5_name
     *
     * @param string|null $default_tax_5_name default_tax_5_name
     *
     * @return $this
     */
    public function setDefaultTax5Name($default_tax_5_name)
    {
        $this->container['default_tax_5_name'] = $default_tax_5_name;

        return $this;
    }

    /**
     * Gets company_logo_url
     *
     * @return \SplFileObject|null
     */
    public function getCompanyLogoUrl()
    {
        return $this->container['company_logo_url'];
    }

    /**
     * Sets company_logo_url
     *
     * @param \SplFileObject|null $company_logo_url company_logo_url
     *
     * @return $this
     */
    public function setCompanyLogoUrl($company_logo_url)
    {
        $this->container['company_logo_url'] = $company_logo_url;

        return $this;
    }

    /**
     * Gets registers
     *
     * @return \OpenAPI\Client\Model\Register[]|null
     */
    public function getRegisters()
    {
        return $this->container['registers'];
    }

    /**
     * Sets registers
     *
     * @param \OpenAPI\Client\Model\Register[]|null $registers registers
     *
     * @return $this
     */
    public function setRegisters($registers)
    {
        $this->container['registers'] = $registers;

        return $this;
    }
    /**
     * Returns true if offset exists. False otherwise.
     *
     * @param integer $offset Offset
     *
     * @return boolean
     */
    public function offsetExists($offset)
    {
        return isset($this->container[$offset]);
    }

    /**
     * Gets offset.
     *
     * @param integer $offset Offset
     *
     * @return mixed
     */
    public function offsetGet($offset)
    {
        return isset($this->container[$offset]) ? $this->container[$offset] : null;
    }

    /**
     * Sets value based on offset.
     *
     * @param integer $offset Offset
     * @param mixed   $value  Value to be set
     *
     * @return void
     */
    public function offsetSet($offset, $value)
    {
        if (is_null($offset)) {
            $this->container[] = $value;
        } else {
            $this->container[$offset] = $value;
        }
    }

    /**
     * Unsets offset.
     *
     * @param integer $offset Offset
     *
     * @return void
     */
    public function offsetUnset($offset)
    {
        unset($this->container[$offset]);
    }

    /**
     * Gets the string presentation of the object
     *
     * @return string
     */
    public function __toString()
    {
        return json_encode(
            ObjectSerializer::sanitizeForSerialization($this),
            JSON_PRETTY_PRINT
        );
    }
}


